buildscript {
    ext.versions = [
        compileSdk                 : 29,
        minSdk                     : 14,
        targetSdk                  : 28, // Robolectric doesn't support API 29 yet.
        kotlin                     : '1.3.50',
        kotlinCoroutines           : '1.3.2',
        kotlinMetadataJvm          : '0.1.0',
        androidxAppcompat          : '1.1.0',
        androidxConstraintlayout   : '1.1.3',
        androidxFragment           : '1.1.0',
        androidxLifecycle          : '2.1.0',
        androidxViewmodelSavedstate: '1.0.0-rc01',
        androidxRoom               : '2.1.0',
        androidxTestCore           : '1.2.0',
        androidxTestRunner         : '1.2.0',
        androidxTestJunit          : '1.1.1',
        androidxTestEspresso       : '3.2.0',
        autoService                : '1.0-rc6',
        okhttp                     : '3.12.6',
        kotlinPoet                 : '1.4.1',
        thrift                     : '0.12.0',
        mockito                    : '2.28.2',
        mockitoKotlin              : '2.2.0',
        mockk                      : '1.9.3',
        robolectric                : '4.3',
    ]
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'digital.wup:android-maven-publish:3.6.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

allprojects {
    group = 'com.linecorp.lich'
    repositories {
        google()
        jcenter()
    }
    afterEvaluate {
        if (ext.has('publicationType')) {
            configurePublication(project, ext.publicationType)
        }
    }
}

def configurePublication(project, type) {
    configure(project) {
        switch (type) {
            case 'jar':
                apply plugin: 'maven-publish'
                task sourcesJar(type: Jar) {
                    archiveClassifier = 'sources'
                    from sourceSets.main.allSource
                }
                publishing {
                    publications {
                        myPublication(MavenPublication) {
                            from components.java
                            artifact sourcesJar
                        }
                    }
                }
                break
            case 'aar':
                apply plugin: 'digital.wup.android-maven-publish'
                task sourcesJar(type: Jar) {
                    archiveClassifier = 'sources'
                    from android.sourceSets.main.java.srcDirs
                }
                publishing {
                    publications {
                        myPublication(MavenPublication) {
                            from components.android
                            artifact sourcesJar
                        }
                    }
                }
                break
            default:
                throw new InvalidUserDataException("Unknown publicationType: $type")
        }
        publishing {
            repositories {
                maven {
                    url = findProperty('publishingRepositoryUrl') ?: "$rootDir/repo"
                }
            }
        }
        bintray {
            user = findProperty('bintrayUser') ?: ''
            key = findProperty('bintrayApiKey') ?: ''
            publications = ['myPublication']
            publish = true
            pkg {
                userOrg = 'line'
                repo = 'lich'
                name = project.name
                websiteUrl = 'https://github.com/line/lich'
                issueTrackerUrl = 'https://github.com/line/lich/issues'
                vcsUrl = 'https://github.com/line/lich.git'
                licenses = ['Apache-2.0']
                publicDownloadNumbers = true
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task cleanRepo(type: Delete) {
    delete "$rootDir/repo"
}
